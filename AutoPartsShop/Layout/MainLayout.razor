
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
<AntDesign.Layout Class="layout">
    <AntDesign.Header Style="display: flex; align-items: center;">
        <div class="logo" Style="color: white; font-size: 20px; margin-right: 20px;">汽修配件商城</div>
        <Menu Mode="MenuMode.Horizontal" Theme="MenuTheme.Dark" Style="flex: 1; min-width: 0;">
            <MenuItem Key="1">
                <NavLink href="/" Match="NavLinkMatch.All">首页</NavLink>
            </MenuItem>
            <MenuItem Key="2">
                <NavLink href="/products">商品中心</NavLink>
            </MenuItem>
            <MenuItem Key="3">
                <NavLink href="/cart">购物车</NavLink>
            </MenuItem>
        </Menu>
        
        <div Style="display: flex; align-items: center; margin-left: auto;">
            @if (_userIsAuthenticated)
            {
                <Dropdown>
                    <ChildContent>
                        <Space Align="SpaceAlign.Center">
                            <Avatar Icon="user" />
                            <span>@_userName</span>
                        </Space>
                    </ChildContent>
                    <Overlay>
                        <Menu Style="width: 150px;">
                            <MenuItem>
                                <NavLink href="/account/profile">个人中心</NavLink>
                            </MenuItem>
                            <MenuItem>
                                <NavLink href="/account/orders">我的订单</NavLink>
                            </MenuItem>
                            @if (_isAdmin)
                            {
                                <MenuDivider />
                                <MenuItem>
                                    <NavLink href="/admin/dashboard">后台管理</NavLink>
                                </MenuItem>
                            }
                            <MenuDivider />
                            <MenuItem OnClick="@Logout">
                                <SpaceItem Direction="horizontal">
                                    <Icon Type="logout" />
                                    <span>退出登录</span>
                                </SpaceItem>
                            </MenuItem>
                        </Menu>
                    </Overlay>
                </Dropdown>
            }
            else
            {
                <Space>
                    <a Href="/account/login" Target="_blank">登录</a>
                    <a Href="/account/register">注册</a>
                </Space>
            }
        </div>
    </AntDesign.Header>
    
    <AntDesign.Content Style="padding: 0 50px; margin-top: 16px;">
        <Breadcrumb Style="margin: 16px 0;">
            <BreadcrumbItem>首页</BreadcrumbItem>
            @if (CurrentPage == "Products")
            {
                <BreadcrumbItem>商品中心</BreadcrumbItem>
            }
            else if (CurrentPage == "Cart")
            {
                <BreadcrumbItem>购物车</BreadcrumbItem>
            }
            <!-- 其他页面的面包屑 -->
        </Breadcrumb>
        
        <div Class="site-layout-content">
            @Body
        </div>
    </AntDesign.Content>
    
    <AntDesign.Footer Style="text-align: center;">
        汽修配件商城 ©2023 Created by AutoPartsShop
    </AntDesign.Footer>
</AntDesign.Layout>

@code {
    private string CurrentPage => NavigationManager.ToAbsoluteUri(NavigationManager.Uri).AbsolutePath;
    private bool _userIsAuthenticated;
    private string _userName = "用户";
    private bool _isAdmin;
    
    [Inject] private NavigationManager NavigationManager { get; set; }
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    [Inject] private AutoPartsShop.Core.Interfaces.ICartService CartService { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await LoadUserState();
    }
    
    private async Task LoadUserState()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _userIsAuthenticated = authState.User.Identity.IsAuthenticated;
        
        if (_userIsAuthenticated)
        {
            _userName = authState.User.Identity.Name;
            _isAdmin = authState.User.IsInRole("Admin");
        }
    }
    
    private async Task Logout()
    {
        //await ((IAuthenticationService)AuthenticationStateProvider).SignOut();
        NavigationManager.NavigateTo("/");
    }
}
